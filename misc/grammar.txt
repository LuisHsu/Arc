DL -> DL' DL
DL -> DL'
DL' -> T id D
D -> VD'
D -> ( PDLT ) B 
D -> ( ) B
VD -> T id VD'
VD' -> ; 
VD' -> [ num ] ;
VDL -> VD VDL 
VDL -> VD
PDLT -> PD PDLT' 
PDLT -> PD
PDLT' -> , PDLT
PD -> T id [ ] 
PD -> T id
B -> { VDL SL } 
B ->  { SL }
T -> int 
T -> char
SL -> S SL
SL -> S
S -> ; 
S -> E ; 
S -> return E ; 
S -> break ;
S -> if ( E ) S else S
S -> while ( E ) S
S -> B
S -> PR id ;
PR -> print 
PR -> read
E -> UO E
E -> num E'
E -> ( E ) E'
E -> id EIT
E -> id
E -> num
E -> ( E )
EIT -> BO E 
EIT -> ( ELT ) BO E 
EIT -> ( ELT ) 
EIT -> [ E ] EAT 
EIT -> = E 
EIT -> [ E ] 
EIT -> ( ) BO E 
EIT -> ( )
EAT -> BO E 
EAT -> = E
E' -> BO E
ELT -> E ELT' 
ELT -> E
ELT' -> , ELT
UO -> -
UO -> !
BO -> +
BO -> -
BO -> *
BO -> /
BO -> ==
BO -> !=
BO -> <
BO -> <=
BO -> >
BO -> >=
BO -> &&
BO -> ||
B -> { }
S -> PR num ;
